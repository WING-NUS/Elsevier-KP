<doc:document xmlns:doc="http://www.elsevier.com/xml/document/schema"><rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"><rdf:Description rdf:about="http://dx.doi.org/10.1016/0020-0255(74)90008-5"><dc:format xmlns:dc="http://purl.org/dc/elements/1.1/">application/xml</dc:format><dc:title xmlns:dc="http://purl.org/dc/elements/1.1/">Networks of constraints: Fundamental properties and applications to picture processing</dc:title><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/"><rdf:Seq><rdf:li>Ugo Montanari</rdf:li></rdf:Seq></dc:creator><dc:description xmlns:dc="http://purl.org/dc/elements/1.1/">Information Sciences 7 (1974) 95-132. doi:10.1016/0020-0255(74)90008-5</dc:description><prism:aggregationType xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/">journal</prism:aggregationType><prism:publicationName xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/">Information Sciences</prism:publicationName><prism:copyright xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/">Copyright © unknown. Published by Elsevier Inc.</prism:copyright><dc:publisher xmlns:dc="http://purl.org/dc/elements/1.1/">Elsevier Inc.</dc:publisher><prism:issn xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/">0020-0255</prism:issn><prism:volume xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/">7</prism:volume><prism:coverDisplayDate xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/">1974</prism:coverDisplayDate><prism:coverDate xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/">1974</prism:coverDate><prism:pageRange xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/">95-132</prism:pageRange><prism:startingPage xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/">95</prism:startingPage><prism:endingPage xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/">132</prism:endingPage><prism:doi xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/">10.1016/0020-0255(74)90008-5</prism:doi><prism:url xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/">http://dx.doi.org/10.1016/0020-0255(74)90008-5</prism:url><dc:identifier xmlns:dc="http://purl.org/dc/elements/1.1/">doi:10.1016/0020-0255(74)90008-5</dc:identifier></rdf:Description></rdf:RDF><dp:document-properties xmlns:dp="http://www.elsevier.com/xml/common/doc-properties/schema"><dp:raw-text>INFORMA TION SCIENCES 7,95-132 (1974) 95

Networks of Constraints: Fundamental Properties
and Applications to Picture Processing*

UGO MONTANARI
Istituto di Elaborazione delta Informazione del C.N.R., Pisa, Italy

ABSTRACT

The problem of representation and handling of constraints is here considered, mainly for
picture processing purposes. A systematic specification and utilization of the available con-
straints could significantly reduce the amount of search in picture recognition. On the other
hand, formally stated constraints can be embedded in the syntactic productions of picture
languages. Only binary constraints are treated here, but they are represented in full gen-
erality as binary relations. Constraints among more than two variables are then represented
as networks of simultaneous binary relations. In general, more than one equivalent (i.e.,
representing the same constraint) network can be found: a minimal equivalent network
is shown to exist, and its computation is shown to solve most practical problems about con-
straint handling. No exact solution for this central problem was found. Anyway, con-
straints are treated algebraically, and the solution of a system of linear equations in this
algebra provides an approximation of the minimal network. This solution is then proved
exact in special cases, e.g., for tree-like and series-parallel networks and for classes of rela-
tions for which a distributive property holds. This latter condition is satisfied in cases of
practical interest.

1. INTRODUCTION

In writing this paper we had in mind mainly the problems of a particular
field, namely picture recognition and description. However, the problem of
proper representation and economic handling of constraints is very general
and is important in many problems of operations research, engineering, and
computer science. For instance, many practical design problems consist of find-
ing any solution which satisfies all topological and geometrical restrictions [1].
Even when an optimization problem must be stated, the chosen constraint
representation is essential in determining the nature of the mathematical prob-

*This work was carried out while the author was visiting at the Department of
Computer Science, Carnegie Mellon University, Pittsburgh, Pa. and was supported in part
by the Advanced Research Projects Agency of the Office of the Secretary of Defense
(F44620-70-C-0107).

© American Eisevier Publishing Company, Inc., 1974

96                                              UGO MONTANARI

lern involved and its difficulty. Unfortunately, many practical constraints are
difficult to handle, because they involve in a complicated way many variables.
For instance, we can mention the noncrossing condition among electrical paths
in an integrated circuit layout or, as a more esoteric example, the restriction to
be faced in the design of computer rooms that all magnetic tape units must be in
sight from tlie operator.

In picture processing, constraints play an important role, but they are un-
likely to be representable in a linear or anyway simple form. Here constraints
are better known by the name of (geometrical, topological, structural) prop-
erties of the class of pictures under consideration. But in fact they are present as
fixed characteristics in explicit models or are implied by recognition routines
which do not take into account configurations without the desired property.

However, we believe that an explicit and consistent treatment of constraints
can bring valuable advantages. To show what we have in mind, we present
some scenarios.

(A) SPEED UP OF THE RECOGNITION PROCESS

Often recognition subroutines search a picture for specific elements or fea-
tures. The search space is usually more than two-dimensional, because other
free parameters must be determined at the same time (e.g., the angular position
of a stroke, the vertex structure in a cube [2] ). For efficiency, what we are
looking for must in general be dependent on what we have already found out
about the particular picture. More precisely, it is useless to look for features
which are possible a priori, but are not consistent with the part of the picture we
have already recognized. For instance, if the problem is to recognize human
faces [3], we must, of course, limit the search for particular elements (eyes,
nose, mouth, ears, etc.) to the areas of the picture where they may ever be
present. A second step is to establish constraints between pairs of elements.
If for instance the position of one ear has already been determined, the area in
which the mouth could be found is further restricted. Such binary constraints,
if formally stated, can be intersected and composed. For instance, if also an eye
has been determined, the allowed area for the mouth can be considered the
intersection of the constraints given by the ear and the eye. Furthermore, the
presence of elements yet unfound, such as the nose, but for which constraints
have been defined, could transmit further constraints from determined elements
to the sought ones. In conclusion, if all those constraints are superimposed, the
search space can be reduced. Only the first few elements will be time consum-
ing. For the others, the recognition procedure should be essentially a check of
the evidence we have already gathered.

(Bl OPTIMAL RECOGNITION

In particularly bad cases, combined evidence from all elements is required
before accepting a picture, because many acceptable candidates are present for

NETWORKS OF CONSTRAINTS                                       97

each feature. This situation arises mainly during preprocessing or anyway during
recognition of unstructured entities (see [4] for the limit case of optimal detec-
tion of curves). In this case, it is convenient to assign a merit figure to the var-
ious alternatives, and then to find the best one with an optimization procedure.
Again, systematic handling of constraints is vital in reducing the combinatorics
involved.

(C) IMPERFECT MODELS

A model can be imprecise because it is too simple, or because something
present in the model is missing in reality. In the former case, the model will
not be as powerful as it could be, but it will work; while in the latter case
the picture could be rejected as not satisfying the model. The missing part could
be simply obscured by the noise. If the model is organized in terms of con-
straints, a model without the critical part could be systematically built, taking
into account the constraints transmitted from one part of the model to the other
through the missing part.

(Dj LINGUISTIC METHODS

The application of parsing mechanisms in picture analysis is very promising
[5,6]. These methods work well if the structure of the image is mainly topolog-
ical, as in bubble chamber tracks, chemical structures, block diagrams [7,8].
If geometrical information is essential, it can be embedded in the syntax rules
only in simple cases, as in the linguistic description of mathematical formulas
[9]. If the allowed geometrical relations can be expressed as a set of simulta-
neous constraints, they can be formally added to the rewriting rules of the
grammar under the form of applicability conditions [10]. In this way, perhaps
the geometrical consistency of the various rules can be proved at a grammar
level. TMs fact would guarantee that all the pictures generated by the grammar
are consistent and representable on the plane.

In this paper, we have limited our formalization to binary constraints. On
the other hand, they are represented in the most general way, i.e., as algebraic
relations between sets of possible values of pair of variables [14]. For many
variables, a constraint is then represented as a network of simultaneous binary
relations.

Of course, an n-ary constraint cannot always be represented exactly by an
n-vertex network of binary constraints. However, an optimal approximating
network can be given easily. On the other hand, many different but equivalent
networks can represent the same n-ary constraint. All the networks equivalent
to a given one can be ordered by set inclusion. A least element is proved to
exist and it is called the minimal network. Minimal networks are shown to have
all the constraints as explicit as possible.

The problem of the determination of the minimal network from a given one
is then shown to include most of the practical problems mentioned above about

98                                             UGO MONTANARI

constraint composition and transmission. Unfortunately, no general algorithm
was found. This is not surprising, since very tough problems, like the graph-
coloring problems, fit this scheme.

Approximate solutions are considered instead. In these networks (which are
called closed) all those global constraints are explicit that can be transmitted
through all the possible paths in the network. The problem of determining a
closed, equivalent network is then stated algebraically. If the operations of
intersection and composition of constraints are defined, the above problem can
be shown to be equivalent to the solution of a system of linear equations in this
algebra. Since composition does not distribute, in general, over intersection, an
iterated Gaussian elimination algorithm is required for finding the solution of
the system.

In the last section, some special cases are investigated, in which closed net-
works are minimal, i.e., in which our algorithm computes the exact solution.
If the topology of the network is restricted, tree-like and series-parallel closed
networks are proved minimal. The same result is also achieved if we restrict the
class of allowed relations to a class where composition distributes over inter-
section. This is the case when the sets of possible values of variables have a lat-
tice structure and the relations satisfy a monotonicity assumption. This condi-
tion is satisfied in some cases of practical interest, such as the shortest path
problem in a graph (possibly with negative weights) and its multimensional
equivalents. Here, our algorithm becomes the well-known Floyd algorithm
[12].

2. UNION, INTERSECTION, AND COMPOSITION OF CONSTRAINTS

In this section, a constraint between two variables is represented, in complete
generality, by a relation between two sets. Elementary algebraic properties of
relations are then recalled.

If a constraint exists between two variables x i and x^, x i e X^ = [x i ^ i,...,
x i, N i } &gt;x! e -^2 = {-^î, i,   , -&lt;2, w ;} then in general not all possible pairs
(x!, r-, Xi, s)are allowed. The set of allowed pairs is called a relation between
sets Xi and X^. In general, it is convenient to consider ordered pairs and thus
to distinguish between a relational 2 and a relation Ri\. For instance, if A" i =
{l,2}and^2={l,2,3},thenAi2={(l,l),(2,l),(l,3)}isarelation. Any
relation /?i2 is thus a subset, proper or improper, of the product set X = Xy X
X-^ of all the pairs. A standard way of representing subsets is to use the charac-
teristic function F

F:X, XX^&gt;{0,l};F((xi,,,x^,))=liff(Xt^,x^,,)eR^.

In other words, to each pair in X a binary digit is associated, which is 1 if and
only if the pair belongs to the relation. Being characterized by a binary number

NETWORKS OF CONSTRAINTS                                        99

oîNi  NÏ digits, 2^' 'N1 different relations exist between Xi andX^. Usu-
ally, these digits are arranged in a N^ X N^ matrix [^ 12, rs] whose rows cor-
respond to the elements of set X^ and columns to set X^. Thus we have

RIÎ, rs= 1 ill(.Xl,r,^2,,t)&lt;=^l2.

In our example, the characteristic binary matrix is:

l  O  l

R

12

l  O O

In what follows, relations will be mainly represented in matrix notation.
The inverse R\\ of a relation R^ is defined as the transpose R\\ rs =

D T        - D

"i'i.rs ~ "21, sr 
For relations, being sets, we can define the usual operations of negation

^i2=n-Ri2iff^i2,»=~1-Ri2, (r=l,...,Ns=Ï,...,N^)
union or logical sum

Rn = Ri2 (-1 RIÎ ^ï Ri-i^s^ Piles' R'i2,rs
intersection or logical product

^12 =R\2 ^'1'2 iff/?12,=-R'12,A.R'i'2,

and the partial ordering relation of set inclusion

/?12 C/?i2 lff/?i2, CRiî,rs

An empty relation 0i2 and an universal relation V^ can be defined

012, rs =0' ^^r^ = 1

such that

^12U0i2=/?i2;/?12^^12=-Rl2,

for all R 12. Thus relations between two sets form a complete lattice with great-
est element U and least element 0 and where the operations of sup and inf coin-
cide with union and intersection, respectively.

Next step is to consider a constraint R 12 between variables x i and x^ and a
constraint R^ between variables x-i and ^3. There will be an induced or trans-
mitted constraint/Î 13 between variables Xi and;^: a pair (x^^,x 3^ ,)is al-
lowed, if at least one value x^ , exists, such that both (^ i, r &gt; -^2, t) and (x^ y,
Xy s)are allowed by R 12 and R^s, respectively. This requirement defines the
operation of composition of relations:

N,

Rl3 = RIÎ ' ^23 iff ^13, rs = \/ R IÎ, rt "RISES'
t=l

100

UGO MONTANARI

Note that composition, in matrix notation, is just binary matrix multiplication.
For example, we may have

1  0

R

12 ~

l O l
l O O

,R

23

l l ',Rl3 ~ Rl2 ' RZS -
O l

l    l
l    O

It is very easy to see that composition is associative, and that an identity relation
exists, defined only between a set and itself,

 11, r s

= l iff/-=x

such that

Rn ' IT). =I^1 'Rn =R

^12 '2Î

11

"12

for every relation R 12.

The defined operations of union, intersection and composition have an use-
ful monotonicity property. îîfÇRn) is any expression involving the operations
of intersection, union and composition among relationele and any number of
constants, from7?'i2 CR'^ we have/^i^) ^f(R'[^). This property is obvious
if we notice that function , written in binary form, contains binary sums and
products, but no negations.

A particular case of a relation happens when one of the two sets (say the
first) has just one element. These relations, in binary form, are representable as
vectors and are in a one-to-one correspondence with the subsets of the second
set. Actually, in what follows we will always assume the existence of a ficti-
tious one-element set Xc,, to have an homogeneous way of representing subsets.
Especially useful in our formalism are the fundamental vectors Foi ai^ Via,
i.e., the vectors with only one nonzero element. For instance, the image in R 12
of the element JCi ^ can be defined as represented by the vector

ROÎ = ^ni 'R

12&gt;

where Foi is the fundamental vector corresponding to elemental y
Ki.,=liff?=r.

A relation./? 12 is called total if every element of X^ and Xi is in relation with
some other element. In our formalism, R 12 is total iff

Voi RIÎ ^Ooz and^i2  Vio ^Oio

for every fundamental vector 7oi and ^20  Given any total relation R 12, it is
easy to see that ^12  U^y = Uu and U^^  R^ = Un.

In what follows we are mainly interested in the operations of intersection
and composition, so we will use the symbol + for intersection and the simple

NETWORKS OF CONSTRAINTS

101

concatenation for composition. Unfortunately, composition does not distribute
over intersection. In general

For instance, if

R

12

l     l

O O

 R' -

lKl3 -

O O
l O

 /?'

, KI

l O
O O

then

R 12(^23 +^23) = 013; R 12 RIS + R 12 ^23 =

l    O
O   O

A special case arises when distributivity does hold. In general, we say that
the relations

Rik,Rki i=l,...,n,ii:k.
form a distributive set of relations with respect to set Xfc if

2: v^R,k\ Z RkiV^\ = Z E Vo,R,kRk,v,o

(2.1)

t=i

U + k

\i ^k

(=1  /=1

11- k j ^ k

for every set of fundamental vectors Vy,, Vfy (i = l,..., m; i ^ k) and for
every m. In (2.1) the indexes of the sums go from I to m. Actually, the order-
ing is immaterial and thus we require (2.1) to hold whenever the indexes assume
any set of m values. Note that distributivity defined in terms of fundamental
vectors is more general than simple distributivity. For instance, from

^01^12 (R'23 V^ + ^'3 F3'o) = ^01 Rl2 P'23 V^ + ^01 ^12 P'23 ^30

for every V^, V^o and 730, (2.2) follows, but not conversely.

^12 (^23 + RTS^^ RllRîS + RII ^23-               (2.2)

3. NETWORKS OF CONSTRAINTS

In this section, constraints among n (n &gt; 2) variables are considered. A
straightforward formalization of such constraints as n-ary relations is possible,
but the quantity of information involved grows exponentially with n, and so
no hope exists to handle it for any practical n. Networks of binary relations as
defining an n-ary relation are then introduced. An optimal approximation
theorem is proved, and just one minimal network is shown to exist. Finally, a

102                                                UGO MONTANARI

problem is stated, called the central problem, which embodies most practical
problems posed by networks of constraints.

Generalizing the approach followed in Section 2, it is clear that an n-ary con-
straint can be considered to allow some (or none or all) among the possible n-
tuples of values of n variables. Thus an n-ary relation p is any subset ofX=
Xt X X-i X ... X X. The set X can be visualized as an «-dimensional space.
An n-ary relation p thus represents a "solid" in this space. Given an m-
dimensional subspace S = X,^ X . .. X X,^, any n-tuple a and any n-ary rela-
tion pinX can be projected on S yielding the w-tuple as and the w-ary relation
Ps. The number of distinct n-tuples is Ni ... N and thus 2^* " 'Nn is the
number of distinct n-ary relations. ïîNi = ... = N^ = N then N" bits are re-
quired on the average for storing a n-ary relation. Practical values for N and n
in picture-processing applications are 1000 and 20, and thus the information in-
volved is enormous. One way out is to consider a restricted class of n-ary
relations.

A network R of binary relations is defined as a set of sets X = {Xi,...,
Xn} plus a relation R,, from every set X, to every set X, (i, j = 1,... , n). Fur-
thermore, .R  C ;;( = l,.... n). ïfRj^R^, the network will be called sym-
metric. The network of relations R can be thought of as representing an n-ary
relation

p={a\aeX=XtX---XX^,(\/iJ)S=X,XX,;aseR}.

In other words, an n-tuple a is allowed by p iff its projections on all the two-
dimensional subspaces S of X simultaneously satisfy the binary constraints of
the network R. Note that if some R,j = &lt;^y then p = 0, while, if p = X then
R,, = U,,(i,J=l,... ,fi;i^J)andR,i =/(/= 1,... ,n).

An obvious way of visualizing a network is by a directed graph. Vertices
Vi,..., V n correspond to sets Xi,..., X^, and an arc V, Vj is present from
V, to Vj iffRjj ^ Uij(i ^ ) or R -^ /. Relation R,j is then associated with
the direct arc V, Vj. For instance the following n-ary relation p is represented
by the network R in Fig. la:

P = {(-"''I, llxl,\ïx3,l),(xl,lïx1,\^x3,l)^(xl,lfxl,3^x3,l)}

or, in a more compact notation,

P=

1 1 2

l l 3

l 2 l

(3.1)

where the indexes of the allowed «-tuples form the columns.

A network R is determined by giving in orderly fashion all its binary relations,
and this requires roughly B = n2 N2 bits. Clearly B &lt; N", except for very small
values of TV and n. This argument shows that the class of n-ary relations repre-

NETWORKS OF CONSTRAINTS

103










Fig. 1. Examples of networks of constraints. As a graphical convention, if both arcs VjV,
and V,Vj exist, but only V^V, is labeled with relation Rn, then arc ViV, is assumed la-
beled with Rf-. Networks (a), (b), and (c) are equivalent, and network (c) is the intersec-
tion of networks (a) and (b).

sentable by networks is narrower (in fact, much narrower) than the class of all
n-ary relations.

Given an «-ary relation p, the simple projection formula (3.2) generates a net-
work R' which is, in a sense, the best possible excess approximation of p.

R'i, = {as I a (= p and S = X, X X,}.                 (3.2)

In words, if p is expressed in column form, R\j is obtained by taking the Mh and
the /-th rows (and merging repeated pairs). Note that R' C I and that R',, =
R',^, i.e., T?' is symmetric.

Some properties of.R' are proved by the following theorem.

104

UGO MONTANARI

THEOREM 3.1. The network o f relations R' defined by (3.2) represents an
n-ary relation p' such that

p C p.                           (3.3)

Furthermore, no network R " exists, which represents an n-ary relation p" such
that

r-   'F /   i
PC? Cp.

Thus, in particular, p' = p if p is representable by a network.

Proof. Formula (3.3) is easy proved, because n-tuples a e p satisfy network
R' by construction. We will prove the second part by contradiction. Let a be
an «-tuple such that a e p' but a ^ p". Thus, some projection b of a does not
satisfy a relation OÎR", say b = as, S = X, X X,, b ^R'/,, while b e R'. But if
the pair b was included in R',] it means that an M-tuple aGp exists, such that
as = b. This is a contradiction, because then a ^ p", while we assumed
pÇp".                                                            Q.E.D.

As an example of the projection procedure let us consider the following
relation:

(3.4)



						1	1 2				
					P=	1	2 2				
						1	2 1				
The approximating	net	wo	rki	S:							
R\2=	11	l2	22	=	1 0	1	; ^23 =		l 2 2 l 2 l	=	l 0l l
^'13=	l l	l2	2 1	=	1 1 l C	)	; RH =	/	^22 =^3	3 =J	.

The induced n-ary relation is

1121

p'= l 222
1211

(3.5)

A partial ordering among networks of constraints having the same number n
of vertices can be introduced in a natural way. The ordering relation is defined
as follows:

R' CR" {KR',, Ç^J; (;,  = l,. . . , n).

(3.6)

NETWORKS OF CONSTRAINTS                                      105

The reflexive, weakly antisymmetric and transitive properties for network inclu-
sion descend from the same properties for set inclusion. It is also clear that the
set of all networks with n vertices is a lattice under Ç because a least (R,j = 0,y)
and greatest (/?y = t/,y if ; ^ ; R = I) networks exist. Thus union and inter-
section between two networks are defined. It is also immediate to see that

R'CR" implies p'Cp"                    (3.7)

where R' and R" represent p' and p".

We have seen that not all the n-ary relations are representable by a network
of constraints. It can also happen that an ra-ary relation p is representable by
many distinct networks. For instance, relation (3.1) can be represented by the
networks in both Fig. la and Fig. Ib. Two networks R' and R" which represent
the same n-ary relation p are called equivalent.

The next theorem proves the existence of a minimal network M representing

P.

THEOREM 3.2. Let Sp be the equivalence class of all networks representing
the same relation p. If

also

(See, for instance. Fig. l a, b, c). As a consequence, a minimal (with respect to
C) network M representing p exists, and can be obtained from p by the projec-
tion formula (3.1).

Proof. To prove this theorem, we first notice that R CR' and R (^R", and
thus an n-tuple a satisfying R satisfies also R' and R" for (3.7). Conversely,
ifa satisfies R' and7?" it satisfies also R. In fact, for each subspace S = X^ X Xj,
if as GR'ijïndas GR'ijthenas G. R' l^ R" = R by ths definition of intersection.
Finally, the network obtained by formula (3.2) must be minimal: if any pair
b is erased by any relation Rij, the represented relation p is changed.     Q.E.D.

Given an n-ary relation p representable with a (minimal) network of con-
straints M, and a subspace S = Xi X ... X X,n of X, one could ask if the projec-
tion ps ofp:

Ps= [as \aep}                        (3.8)

is representable with a network of m nodes. Interestingly enough, m the general
case the answer is no, and a counterexample is given in Fig. 2. There, relation
p is

P = {(xl, 1 ,^2 , 1 »-^S, 1 ^-&gt;C4, l)i (x!, 1 )&lt;2, 2 »^3, 2^?C4, 2);

(xl,2,x'^,2,x3, 1 ,"^4, s)}-

106

UGO MONTANARI




Fig. 2. An example of indecomposable network.

lfS=Xi X X^ X X^, ps is given by (3.4). But, as we saw, (3.4) is not repre-
sentable with a three-vertex network. If ps is representable for all S, then p and
all networks representing p are called decomposable. If not, the next theorem
gives tlie best approximating network for ps.

THEOREM 3.3. The best, minimal approximating network of ps is the com-
plete subnetwork M8 of M corresponding to the set of vertices S = {Xi,...,
X^}.

Proof. This property descends immediately from Theorem (3.1) and from
the fact that if T = Xi X X/ is any bidimensional subspace of S, we have:

Q.E.D.

In the remainder of the paper we will be often concerned in proving that a
network R is minimal: M = R. The next theorem gives a characteristic condi-
tion for R to be minimal.

THEOREM 3.4. A necessary and sufficient condition for a network R to be
minimal, is that if a pair b satisfies the generic relation 7?, an n-tuple a satisfy-
ing R exists, such that as = b, S = X, X X,.

Proof. Necessity. ÏÎR is minimal and b  R,j, an n-tuple, a  p, must exist
such that as =b, because otherwise R' with R'y = R,j - {b} would be equivalent
to R and smaller. Sufficiency. Under our assumption, no pair can be erased
from any R,j still obtaining an equivalent network. Thus R is minimal.   Q.E.D.

The last theorem can be modified as follows.

NETWORKS OF CONSTRAINTS                                       107

COROLLARY . Given any relation R,j ofR, if whenever a pair b belongs to
R,j, an n-tuple a satisfying R exists such that as = b, S = X, X Xj, then R,j =
M.

Proof. This statement follows from the previous theorem and from the equiv-
alence of T? and M.                                                Q.E.D.

The above theorem shows that a minimal network of constraints is perfectly
explicit: as far as the pair of variables JC, and x, is concerned, the rest of the net-
work does not add any further constraint to the direct constraint Af,y. Minimal
networks are likely to represent an n-ary relation in a redundant way. In our
application, for instance, we expect to define constraints almost only between
geometrically adjacent elements. As a result, the density d of connections (de-
fined as the average number of arcs per vertex) should be bounded, like that of
a planar graph, d &lt; 3' or at most should grow logarithmically with the number
of vertices, but not linearly like in a complete graph.

From the above reasoning it should be clear that, in our application, net-
works of constraints will never be given or stored as minimal networks. Further-
more, the trivial way of getting the minimal network, i.e., generating the n-ary
relation p from the given R, and then M from p with (3.2) will be impossible in
continuous cases and always practically infeasible. Therefore, the problem of
computing M from R in an economic way is nontrivial. On the other hand, we
can show that most of the practical problems arising from the use of networks
of constraints can be naturally reduced to the central problem of deriving M.
In fact, in the first scenario described in the introduction, ïî VykCk = ï,... ,m)
are the fundamental vectors corresponding to the already determined values of
the first m variables, the intersection of images

m

Rop=Z v^M^p

k= 1

clearly represents the set of allowed values for the p-th variable. In scenario (b),
if we want to eliminate a variable (related to m others variables) using a se-
quential optimization method, we must optimize the objective function sep-
arately for all the feasible w-tuples of related variables. The set of those m- __
tuples is ps, if S is the subspace of the related variables. By Theorem (ï^M8
is the best approximating network of ps. Finally, in scenario (c), the minimal
subnetwork At5 corresponding to the parts which are not missing constitutes
the best reduced model.

1 In a planar graph, the number n of vertices is related to the number a of arcs by the
relation a &lt; 3 n - 6. Equality is achieved if all the faces aie triangular.

108

UGO MONTANARI

4. APPROXIMATE SOLUTION OF THE CENTRAL PROBLEM

In this section, we consider the problem of computing the minimal network
equivalent to a given network. No exact general algorithm, besides complete
enumeration, was found. However, an approximate solution is given, which
generates an equivalent "closed" network.

In a generic network of constraints, a certain pair (x^r, ^/, s) can be allowed
by the direct relation R,, (or also by /?y /?, and Rjj), but can be actually for-
bidden because it is not possible to give to all the other variables any set of
values allowed by all the constraints. To recognize such pairs and erase them,
namely to make explicit the global constraint, is the essence of the central
problem. The central problem, in its generality, is very difficult. Graph-coloring
problems, for instance, are very neatly represented by networks of constraints:

relations are all of the type U-I, i.e., all pairs are allowed except those of the
same color. The number of allowed colors (i.e., the cardinality of sets X,) and
the topology of the graph characterize the particular problem. For instance,
Fig. 3 shows the network of constraints representing the problem of coloring a
tetrahedron with three colors: an impossible task. However, it is difficult to
recognize it with a sequence of local examinations of the network, and without
"higher-order" reasonings. Needless to say, no hope exists to extend such tricks




O l l
Fig. 3. In this network, the relation 1 0 1 is associated to every arc. This network repre-

1 l O

sents the impossible problem of coloring a four-vertex complete graph with three colors.
This network is symmetric and closed but not minimal.

NETWORKS OF CONSTRAINTS                                      109

to the general case. Therefore, we look for an approximation of the minimal
network M, i.e., a network Y which is as explicit as possible and still computable
with local operations.

Let us consider an ordered pair of values

b=(x,^,x,^)
and a path2

P= (T, = V, ,..., V, ,..., V, = V,) m &gt; 1

vi    ; &gt;    ' ip&gt;    ''m    /'

in the complete network R from vertex V, to vertex Vj. The pair b is allowed
by the path P if the variables

Xj  JCi , . . . , Xi . , . . . X,    X,

l    lyi    &gt; lp &gt;    ' 'm    /

can be given suitable values

xi, r ~ xlo  l'a '    ' xip' r p '    ' ^'m 'I'm ~ xi s

which satisfy the relations

^i-oi, ,    .^ip-iip'    '^m-i'm

along the path P. Note that the same vertex V^ can occur in a path any number
of times, and different values can be given to its variable x^ for each occurrence.
A pair b is called legal if it is allowed by all the paths P from V, to Vj. We will
see that the property of being legal is decidable in a finite number of steps.
Finally, a network is called closed if any pair b which is not legal is also not al-
lowed by the direct relation R/j.

It is clear from the definition that minimal networks are closed. The converse
is, in general, not true. For instance, the network in Fig. 3 (representing the
uncolorable tetrahedron) is closed but not minimal. This also means that many
closed networks equivalent to a given network may exist. Given a network R,
its closure Y is defined as the largest closed network not larger than R but equiv-
alent to R. The next theorem proves the uniqueness of the closure.

THEOREM 4.1. The set of closed networks not larger than R but equivalent
to R (which is ordered under Ç) has a largest element Y. Therefore, Y is the
only closure ofR.

Proof. We must prove that the union of two closed networks Y' and Y ",
both not larger than R but equivalent to R, is a closed network Y not larger than
R but equivalent to R. In fact from R 3 Y' and R 3 Y" we have R 3 Y' U Y " =
Y. From R D Y D Y', R equivalent to Y' and (3.7) twice, we have Y equivalent

2 A path in R is any sequence of vertices. A vertex can occur more than once in a path,
even in consecutive positions.

110                                               UGO MONTANARI

to R. Let y^,., = l. Then for y = r' U r" either Y^  = l or V,^  = l or both,
^y ^y, w = l  Then the pair b = (x^ r, x^,) is allowed by P in Y' for closure.
Thus b is allowed by P also in Y, because the same set of path values satisfying
Y' satisfies also Y, for Y' C Y.                                       Q.E.D.

The closure Y of a network T? can be characterized as being the solution of
the following system of equations.

Yij-T.RikYkj^di,                    (4.1)
k=l

where

dij =/, if; =; dy = Uij otherwise.

A network of relations Y is called a solution of system (4.1) iff:

(i) The relations Vy satisfy equations (4.1).
(ii) No other network Y' exists, such that Y' satisfies equations (4.1) and

y'Dy.

Note that condition (ii) is necessary for ruling out solutions which are not equiv-
alent to R (like the trivial case y,y = 0y) and that it does not imply uniqueness
of the solution a priori. We can prove the following theorem.

THEOREM 4.2. Any network Y which satisfies system (4.1) is:

(a) Not larger than R.

(b) Closed.
I f furthermore Y is a solution of system (4.1), then Y is:

(c) Equivalent to R.
(dj The closure of R.
Therefore only one solution exists.

Proof, (a) From (4.1) we have

YCI^
Thus, by the monotonicity property of composition

And finally, from (4.1)

Yii c^I/r C^v

(b) Given any path P, we will prove that if Y,^  = 1 and Y satisfies equations
(4.1) then the pair b = (x, ,., x,, s) is allowed byPmR, i.e., the relations of.R
along P can be satisfied. We will prove this result by induction on the length
m of the path P. If m = 1 the proof is trivial, because Y,j is the only relation
which must be satisfied. If the result is true for every path of length (m - 1),

NETWORKS OF CONSTRAINTS                                      111

it is true also for paths of length m. In fact, from (4.1) we have:

I" = / ,   C- R, ,  I ; ,

'I    'o'm  'o'l  'I'm

Therefore at least one value x, ,. must exist, such that R, , y  = 1 and

'l i'I             '              'O'l''O'l

Y, ,    ..  =1. Thus relation R, , is satisfied by (x; ,. ,x, r ), while

ll'ln&lt;l'm                       'o'l              - v 'o''(&gt;' 'ii'i-"

Y, ,    ,. = 1 implies that the m - 1 relations .R; ;,..., R,    ;  can be
'i'm''i'm                                   'i'2'    ' 'in-i'm

satisfied according to the induction assumption.

(c) If an «-tuple satisfies Y, it satisfies also R, because Y CR for (a). Con-
versely, let a = (xi ^ ,... , JCn r ) be an n-tuple satisfying network R, namely
Rij, r,r- = 1 0\  = 1 &gt;    , ") We will prove that a satisfies network Y too. In
fact, if we assume Y,j r-r- = O ^oï some ;',, it is possible to find a larger network
Y' D Y (against (ii)) satisfying (4.1) and such that Yy ,..,.. = 1. For proving it, let

Y?i, r,r, = 1 ; ^, rs = Y, r.^r^ r, and ^ r, O-, / = 1,...,«)
It is immediate to see that equations

n   I Nk                            \ .

Yinr,- A   V Rik,r,t^,,tr, Au?,/,.,^.
fc=i \ r=i                    /

are satisfied, while from Y satisfying (4.1) we have:

n / Nk           \

Y?,,r^ A   V Rik,rt^Y^^\/\d^(i,j=l,...,n,r^ri,s^s,~)
fc=i\r=i              /

from monotonicity of union and intersection. So we have
Y^'^R^Y^+d,,.

k=l

Now, if we compute iterative ly

Yfri^^,^^

k=l
we will have

y0 cy' ç...crp

from monotonicity of intersection and composition. Thus for some q we will
have

yq = yq+1 = y'

satisfying (4.1) and such that Y' 3 Y0 3 Y.

(d) Let Y be the closure of R. From the definition of closed network, applied

112 UGO MONTANARI

to paths of length two, we have

Then, from Y C R

Summing up, we have

Yij Ç^ifc î/fe+^I7

Y,fC^R,kY^+dif.

k=l

Actually, we must have equality, i.e. (4.1), because otherwise with the iterative
method shown in part (c), a network Y ' can be found which satisfies (4.1).
Then the proof of part (c) shows that a network Y " =5 Y ' 3 Y can be found
which satisfies (4.1) (and thus is closed and not larger than R) and is equivalent
to R. The existence of Y " would contradict the maximality of Y proved in
Theorem (4.1). Thus Y satisfies (i). On the other hand, if Y is any solution, we
must have Y 3 Y for the same reason. Thus Y satisfies (ii) and is the only
solution.                                                           Q.E.D.
The next corollary gives a simple way for characterizing a closed network.

COROLLARY. A necessary and sufficient condition for a network Y to be
closed is to satisfy the following system of equations

YH=Z Y.kYkf+a.j O',/=l,...,").            (4.2)
fc=i

Proof. According to Theorem (4.2b), if Y satisfies system (4.2) Y is closed.
Conversely, if Y is closed, it must be the closure of itself and thus by Theorem
(4.2d) must satisfy equations (4.2).                                   Q.E.D,

The next theorem proves a useful property of closed networks.

THEOREM 4.3. In a closed network Y, the loop relations and the relations
among different vertices satisfy the following equation

y=y,y {//,+,, (i,j=\,...,n).                (4.3)
Proof. From (4.2) we have

Y.. c Y-- Y-- + /
J« '= 11] 1 ii  u

and from monotonicity

YCYUj.+Ii,.
Furthermore, from (4.2) we have

Yif C Y Y.

NETWORKS OF CONSTRAINTS                                      113

In binary form we have

Y,r. C yu,rr A Y^  (r = 1,... ,7V,; s = 1,..., N,)
or, from a truth table

y..    c Y..

1 ll,rs ~ - n, rr 

Making the union with respect to s

Ni

V Y,CY,,^ (r=l,...,N,).
s=l

Equivalently, we can write

Therefore we have

y=y,/t//,+/.                 Q.E.D.

Given a network R with n vertices we can give an algorithm for computing its
closure Y.

Algorithm C

Stepl Y0 =R.

Step 2 Execute next step for k = 1,...,/;.

Step 3 Y^ = Y^-1 + Y^-1 Y^1 Y^-' (i,j = 1,. .., n).                (4.4)

Step 4 If Y" ^ Y0 then let Y0 = Y" and go to Step 2; else let Y = Y" and stop.

THEOREM 4.4. Algorithm C computes the closure YofR. In particular, if
Y" ^ = l m the network Y" obtained at the end of the first iteration, then pair
(x, ,., x^ s) is allowed by all the paths from V, to Vj in R.

Proof. We will prove that (i) Y is not larger than and equivalent to R; (ii) Y is
closed; (iii) for every closed network Y ' equivalent to R and not larger than R
we have Y' CYC^R.

(i) Each application of Step 3 produces a network Y* equivalent to the prece-
dent Y*"1. In fact, clearly Y^ Ç Y*1'1. On the other hand, if the second term
in the right member of (4.4)

Nk

V Y*"1 A Y1''1 A Y''"1 =0

v  I ik.rt " 'kk,tt " 'k/,ts  u
t=l

is zero for some r, s it means that no value for x/c can be found which satisfies
relations Y^'1, Y^1 and Y^.1 forx, =Xi^ andxy =-»,.;. Thus no n-tuple is
excluded by Yk which is not excluded by Y''"1. Therefore, from transitivity
of equivalence and inclusion, Y is equivalent to R and Y Ç R.

114                                                  UGO MONTANARI

(ii) We wül prove that if a pair is allowed by V" then is allowed by all paths
in Y0. We assume that when Step 3 was executed (k - 1) times, if a pair
(x, &gt;., Xj^ s) is allowed by the relation Y^'1, then it is allowed also by all the
paths in Y0 with extrema in F, and V, and having all the intermediate vertices
with indexes &lt; k - 1. If k = 1, the assumption is trivially true. We will prove
the same property for k after the kth execution. Let us consider any path P
from F; to Vj having intermediate vertices with indexes &lt; k. If vertex V^ does
not belong to this path, the induction step is proved. If it does, path P can be
decomposed in three paths:

(a) a path from V, to V^ ',

(b) a finite (possibly zero) number of circuits from V^ to V^,

(c) a path from V^ to Vj.

All those paths have intermediate vertices with indexes ^ k - 1. According to
the step (4.4), if Y^ rs = 1 &gt;tnen a value x^ _ y can be found such that Y^n = 11
Y^jc1 f{ = 1 and Y^,\y = 1. Thus, by the induction assumption, we can give to
all the intermediate variables of paths (a), (b), and (c) suitable values which sat-
isfy the corresponding constraints in V0. When the algorithm stops, we have
yn = yo = Y, and thus Y is closed.

(iii) Let Y' CR be any closed network equivalent to R. We will have Y' CY1'
for all k and for all iterations of algorithm C. Thus also Y' CY. Inductively,
let us assume that Y ' Ç Y'''1 before the execution of Step 3. This is certainly
true for the first execution of Step 3 in the first iteration Y0 = R. Then Y' C
Y1'. In fact, if network Y' is closed, it satisfies equations (4.2) for the corollary
to Theorem (4.2). In particular, we have

Y/jCY;kY^d;Yk,^Y^Y,i,
and therefore for the monotonicity of composition and intersection

Yij C Y,ic Yick Y^j + d,j
and thus

Y/j=Y^Y^Y^Y,+d.                 (4.5)
But from the induction assumption and monotonicity we have

Y;, + r Y^ Y,, + d c ^- + y^-1 y^1 r^-1 + d.       (4.6)

Now note that the dij term in the right member is redundant because if ; ^j
then dij = Ui, and if ; = then d = / and Y^~1 ^ /? C ,,. Thus from (4.4),
(4.5), and (4.6) we have

Yi, Ç y^                         Q.E.D.

It is interesting to see how the number of iterations required by algorithm C is
dependent on the order of vertices in Step 2. For instance, in network R in

NETWORKS OF CONSTRAINTS

115







Fig. 4. (a) A symmetric network of constraints, (b) The network of constraints V equiv-
alent to (a) computed by algorithm C in one iteration, with order of elimination (4, 1, 2, 3).

Fig. 4a, if k = l, 2, 3,4 then only one iteration is necessary for finding the clo-
sure Y(Y,j = ct&gt;jj). If k = 4, l, 2, 3 then two iterations are necessary. Fig. 4b
shows the network Y ' obtained at the end of the first iteration.

According to the above theorem, if Y,^  = 1 in the network X, Y' obtained
at the end of first iteration, then the pair (x^ r, x^ s) is allowed by all paths in R.
For instance, in the above example for / = 1,  = 2, and r = s = ï and for path P =
(Y i, V 3, ^4&gt; ^2), values x i ^ i ,^3, i ,^4, i and x^ _ i satisfy the three relations
R 13, R 34 &gt; ^42 along P. Note how this condition is not sufficient for Y ' being
closed. Thus, in general, one iteration of algorithm C is not sufficient. On the

116                                                UGO MONTANARI

other hand, each iteration of algorithm C produces an equivalent, strictly smaller
network, and thus convergence is assured.

5. EXACT SOLUTION OF THE CENTRAL PROBLEM FOR PARTICULAR
CLASSES OF NETWORKS

In the last section we have been able to give only an approximate solution to
the central problem in the general case. A closed network instead of the min-
imal network was obtained. We can now ask if there are particular cases in
which a closed network is always minimal.

In general, given a network R and a pair of vertices V,, Vj we are interested
in knowing if the relation V,, of the closure Y of R coincides with the relation
Mij of the minimal network equivalent to R. In this case, network R will be
called regular with respect to pair V, V,. If R is regular with respect to all pairs
of vertices, it will be called regular. Thus for a regular network R we have Y =
M. In this section, we will see that interesting classes of networks are regular.

We can determine regular classes of networks in essentially two ways: either
constraining the topology of the network or restricting the type of allowed rela-
tions. We will consider the former case first.

A symmetric3 series-parallel network (spn) with respect to a pair of vertices
V i Vj is usually defined recursively as follows

a) A complete symmetric network with two vertices V, and Vj is a spn.

b) Given two spn's with respect to F/F/and V," Vj', the network obtained
letting V j and V," coalesce is a spn with respect to V[ Vj'.

c) Given two spn's with respect to V,' Vj' and V," Vj", the network obtained

letting V, = V i = V," and Vj = Vj' = Vj" is a spn with respect to V, Vj.
As usual, all missing arcs V, l'y are assumed to correspond to the universal rela-
tions Ujj.

In the last section we saw that in a closed network Y a relation Vy makes
explicit the constraints given by all the paths from V, to Vj. The next lemma
proves that a closed network has the same property for all the subnetworks
which are series parallel with respect to V, Vj.

LEMMA 5.1. Let Y be a symmetric closed network, and let R be any subnet-
work of Y which is a spn with respect to V, Vj. Let M be the minimal network
equivalent to R. We have

Y.jCMij.                             (5.1)

3 In what follows, symmetry will be almost always required, since a minimal network
is obviously symmetric, while symmetry is not assured for a closed network. On the other
hand, an equivalent, symmetric and not larger network R ' can be immediately computed
from any R with the formula: Rjj = Rjj + RT. Its closure Y is then symmetric, as is obvious
from algorithm C.

NETWORKS OF CONSTRAINTS                                      117

Proof. According to the corollary to Theorem (3.4) we must prove that if
^i/', rs = 1 tnen an w-tuple satisfying R (R has m vertices) such that x, = x^ r and
xi = xj, s can be found. We will use induction applied to each step of the recur-
sive definition of a spn: we assume that the property is true for the component
networks and we prove it for the resulting network. For steps of type (a), if
^;7, rs = 1 ^nen ^M, sr = 1 Ic)r symmetry, while V,, ,.,. = 1 and Y ^ = 1 for
(4.3). For steps of type (b), let V^ be the vertex in the middle of the series.
If Yjj, rs = 1 ^d ^ ls closed, then a value x^ = JC^ , exists such that Y,if, rt = 1
and Y^, ^ = 1 and therefore the recursive assumption can be applied because
no constraint exists in R between two vertices in different components. In defi-
nition (c), the recursive assumption can be directly applied to both components.
Q.E.D.

As an example of application of this theorem, let us consider again the color-
ing problem represented by the closed but not minimal network Y in Fig. 3. In
Fig. 5a, we have a subnetwork R which is a spn with respect to all pairs of ver-
tices except V t V^. In Fig. 4b, we have the minimal network M equivalent to R.
Note that Vy CM,y (in fact. Y,, = M,j} for all pairs except V^ Vy.

The next theorem proves the regularity of some classes of networks.

THEOREM 5.1. (a) Tree networks4 are regular, (b) Symmetrical series-
parallel networks with respect to a pair V i V j, possibly with trees rooted at any
vertex, are regular with respect to V, V,.

Proof, (a) Let R be a tree network, and let Y be its closure. Given a pair
Vj V j, let P be the only connecting path in R. If y,y  = 1, suitable values can
be given to the vertices of P which satisfy the relations of Y along P, since Y is
closed. It is now easy to see that suitable values can also be given to the other
variables. It is sufficient to evaluate them following the tree structure of R, i.e.,
in such a way that each new vertex Vic to be evaluated is adjacent in R to one
already evaluated vertex F/, (more than one vertex is not possible: a circuit
would be present). Inductively, let JC/, ^ be the value already assigned to x^ .
To x^ we can assign any value x^ , such that Y^ ^ = 1. Such a value must
exist, because otherwise Y^, rr = 0 for Theorem (4.3) and thus Yp^ ^ = 0 for
all p (again for the same Theorem) so that the value x/, ^, could not have been
given previously to Xf, according to this procedure. At the end, all the variables
have been evaluated and satisfy the Y constraints along the tree, and thus also
all the R constraints, because Y C R for Theorem (4.2(a)), and R has constants
only along the tree. Therefore also Y is satisfied, because Y and R are equiva-
lent. Thus Y is minimal and R is regular.

(b) Let R be the spn and let Y be its closure. Let Y ' be the subnetwork of Y
topologically equivalent to R. We have Y C Y ' Ç R. But Y is equivalent to R

''As with spn, the branches of the tree correspond to symmetric, 2-vertex networks.

118

UGO MONTANARI







Fig. 5. (a) A series-parallel network with respect to all pairs of vertices except V-iV^.
(b) Its minimal equivalent network. All nonlabelled arcs are assumed labeled with
O l l

O l .

l O

and thus also Y ' is equivalent to both Y and R from (3.7) twice. Now let M
be the minimal network equivalent to Y ' and thus to Y and R. For Lemma
(5.1 ) we have Vy Ç M^. But M and Y are equivalent and M is minimal. Thus
M,, = Yjj and R is regular with respect to V, V,. If trees are present at some
vertices of the spn, we can find a feasible «-tuple evaluating the vertices of the
spn first, and then evaluating the vertices of each tree as in part (a) of this
theorem.                                                           Q.E.D.

NETWORKS OF CONSTRAINTS                                      119

In the remainder of this section, we want to determine a class of regular net-
works by restricting the type of allowed relations. We need the following defini-
tion. A network R such that relations R^ and R^, (i = 1,..., n; i ^ k) form a
distributive set of relations (see condition (2.1)) for all k, is called a distributive
network. We can now prove the following theorem.

THEOREM 5.2. A closed, distributive network Y is decomposable. Further-
more, its symmetrization

Y/,=Y+Y^i,j=l,...,n)
is minimal. Thus m particular if Y is symmetric, it is minimal.

Proof. We will prove first that if variables .X i,... ,^k-i can be given values
JCi^ ,... ,JCfc-i^,_ which satisfy relations y,y0",/= 1,... ,k - 1), a value
Xfc r, can be given to variable x^ which, together with the previous values, sat-
isfy relations Y,j(i,j = 1,. .. ,k). From the assumption we have Y,^ ,.» = 1 or
equivalently

Vo,YV,o=U^ i,j=l,...,k- 1,
where the fundamental vectors Vo, and V/o are defined as

FO;, r = 1 and Vjo, r = l "T r = ri
From the corollary to Theorem (4.2) we have

y,/.Cy,^. i,j=l,...,k-l.

From monotonicity, we obtain:

^o; Yiic Y^j Vjo = UQO.

Summing with respect to ;' and 

Z Z Vo.Y.kYk, V=Uw.
;=i /=i

Applying distributivity (2.1) we have

/fc-i \/k-i \

Z V^ik Z YkiV =t/oo.

\'=i / \/=i /

Then a value -t^ ,., can be found, such that

^Z ^o, ^ , r, = 1 and (^ ^ V/.o^ ,^ = 1
^'=1        /            \/='        /

120                                                UGO MONTANARI

or, completely in binary form,

Y,k, r,rfc = 1 and Y^, ^ r, = l i,]=\,...,k- \.
Therefore, from Theorem (4.3) we have

Ykk,rkrk=\

Finally, adding the inductive assumption, we have

yi/, r,Y, = l l,1=1,..., k.

Observing that the ordering of variables is immaterial and using the above proof
as inductior^step, we have shown that if a fc-tuple b satisfies any complete sub-
network Vs of Y, S= { V, ,..., V i }, at least one «-tuple a exists, whose
projection on S is b, which satisfies Y. On the other hand, if b does not satisfy
Vs, a does not satisfy Y by definition. Thus the projection p of the w-ary
relation p represented by Y is representable by Vs and therefore Y is decom-
posable. Furthermore, Y' is minimal. In fact, if_y = 1 the ordered pair b =
(x^ r, Xj, s) satisfies the two-vertex subnetwork Vs, S = [X,, X,}. Then by
the first part of this theorem an w-tuple a exists, such that a satisfies Y and as =
b. But Y is equivalent to Y ' and thus a satisfies Y ' as well. Therefore Y ' is
minimal for Theorem (3.4).                                          Q.E.D.

In what follows, it is convenient to consider a particular case in which a
slightly different distributive property holds. Given a network R, let us con-
sider the set D of all the relations equal to all the possible expressions obtained
by combining relations R^ with the operations of intersection and composition.
If in D right and left distributivity of composition over intersection always
holds, R is called star-distributive. In this case, given any expression, it can al-
ways be reduced to a sum of products using distributivity. It is immediate to
see that each term of the sum is the constraint represented by a path between
the same pair of nodes. Therefore every relation Z),y in D represents the global
constraint transmitted by some set of paths between vertices V, and V j. Es-
pecially interesting then are the limit relations D*5 representing the global con-
straint transmitted by all the paths in R between V, and Vj. D* is the corre-
sponding network, called limit network.

The next theorem proves some interesting properties ofZ?*.

THEOREM 5.3. Let R be a star-distributive network, let D* be its limit net-
work, let Y" be the network obtained after one iteration of algorithm C, and
let Y be the closure ofR. We have

(a) D*=Y".

(b) D* = Y.
Therefore Y = Y" and one iteration is sufficient/or algorithm C.

5 As usual, we assume D^ c^  (/= 1,...,«).

NETWORKS OF CONSTRAINTS                                       121

Proof, (a) According to Theorem (4.4), if Y" ^ = 1, then the pair (JC, ,.,
x^ s)ls allowed by all the paths m R. Therefore

r^ç^.

On the other hand, Y" is obtained, m algorithm C, with a finite number of inter-
sections and compositions of relations OÎR. Therefore Y" is the sum of some of
the terms of which D* is the sum: thus

Therefore we have

Df,=Y^ (,,/=!,...,«).

(b) It is very easy to see that D* is the solution of system (4.1). We prove first
that D* satisfies equations (4.1). In fact, let us consider the relation D* It is
equal to the sum of the terms corresponding to all paths between Vj and V,.
The first factor of each term must be one of the relations Ruc (k = 1,... , n).
Partitioning the paths and factorizing R^, we clearly obtain the right member

É RikDÎ,^d.

k=l

In fact, if i=j the condition D^ C / holds by construction. Since D* satisfies
(4.1), from Theorem (4.2) we have

But we have

and, from part (a)

Thus we have also

£»*C Y.

YCY",

£)*= Y".

D* = Y. Q.E.D.

It may be interesting to see how in the star-distributive case algorithm C is
nothing else that the solution by Gaussian elimination of the system of equa-
tions (4.1). We will show it with an example. If n = 3, we have

Y^,=Rti Yt,+R^Y^+R^Y^,+cli,

^2/=^2i Yi,+R^ Y^+R^Y^+d^,. /=l,...,n

Ysj^Rsi Y^j+R^ Y-ij+R^^ Y^j-^d^j.

122                                                UGO MONTANARI

Now it is easy to see from a truth table that the solution of the single equation

Z-=AZ+B
is

Z=AB

if we are interested (as we are) only in the largest Z. Thus applying distributiv-
ity, the first equation of our system becomes

Y\j = RH d\j + RH R 12 YI] + RnRi3 ^3/-
Then substituting in the other two equations, multiplying and factorizing, we get

Y t j =Rn dij+ RH RIÏ YÎJ +^?ii /?i3 Y^j

YÎJ =^21 ^11 ^1/ + (RZÎ + RÎI PU Pli) ^2/+ (^23 +^21 ^11 ^13) ^3/+^2/

YS, = /?31 Rn di, + (^32 + ^31 ^11 ^12) YIJ + (^33+^31 ^11 ^u) YSJ + ^3/-

The matrix of coefficients of this new system is exactly equal toy' if we notice
that R 11 Ç /i i and thus R 11 = R 11 R 11 and furthermore Ric i R 11 = Riç i +
Rk i R 11  After elimination of Y^j and Va^ we obtain

Y=Y^di,+Y^d+Y^d
Y=Y^d+Y^d+Y^d
Y=Y^di,+Y^d,^Y^d^,.
For example, if we write the first equation for  = 2, we have

y^y^^+y^+y^^.

But it could be possible to see6 that

In conclusion we have

Yij Ç y;fc Uicj.

y.. = y3
11]   I ir

We can also point out that algorithm C is similar to the Warshall algorithm
[11] for finding the closure of a relation or to the Floyd algorithm [12] for
determining the shortest path between all pairs of nodes in a weighted graph, or
to the algorithm for deriving a regular expression from a left linear grammar or
from a transition graph [13]. The similarity is not casual. In fact, all these al-
gorithm can be considered the solution by Gaussian elimination of a linear sys-

6 Actually, the terms of the type Y^ U^. would not even exist, if variable elimination
had taken place separately for the different values of index;.

NETWORKS OF CONSTRAINTS                                      123

tem of equations in a suitable algebra. We can find the same analogy in Jordan
algorithm for matrix inversion in the usual linear algebra. The only difference
is that in this case the solution of the single equation

Z=AZ+B

Z=(\ -A^B,

while in our algebra, as already pointed out, the solution is
Z=AB.

In what follows, we impose restrictions on our relations for obtaining distrib-
utive and star-distributive networks.

Let us define a partial ordering &lt; in the set X, of values of the variable x, .7
Furthermore, let us superimpose on^, a complete lattice structure together
with the operations of sup and inf. A total relation /?,, between a set Xj and a
set Xj will be called monotone if it has the following properties:

(i) if Rij, r s = 1 and t &gt; r then R,^ ^ = 1 and conversely

if RH, rs = 1 and / &lt; s then R,,', ^ = 1                             (5.2)
(ü) if R,,, ps = l, Ri,, qs = l and r = inf (p, q) then R^,  = l and

if Rij.rp = l, RH, rq = l and s = sup (p, q) then R,,,  = l.         (5.3)
The next theorem will clarify the kind of relations allowed by the above
definition.

THEOREM 5.4. Given a total relation R,,, a necessary and sufficient condi-
tion for R to be monotone is that a defining function

fij ' ^i    &gt; ^j

exists, such that

R^,, =1 iff s &lt;,/(/)                        (5.4)
and

fi, (inf (r,, r, )) = inf (,/. (r, ), f (r, ))                 (5.5)
or, by duality, that an inverse defining function

Sii ' ^ &gt; xi
exists, such that

R^,=liffr&gt;g(s)                      (5.6)

^or notational simplicity we will consider the partial ordering as defined on the set of
indexes as well. For instance r &lt; s is equivalent to x; r &lt; x^s-

124                                                 UGO MONTANARI

and

g,, (Sup (S i , S-t )) = SUp (gij (S i), gif (X2 )).                  (5.7)

/Voo/ We will prove this theorem only for conditions (5.4) and (5.5). The
proof in term of the inverse defining function is exactly dual. Sufficiency.
From equation (5.5) we have

iîr^r,thenfi,(r,)&lt;fi,(r,).                  (5.8)
Therefore if/?,y, rs = 1 3"^ t^r from (5.4) and (5.8) we have

s&lt;fi,(r)^fi,(t)
and thus

If ^lA rs = 1 a"^ t^swe have

and thus

^)/, ff ::: l 

If Ay, rp = 1 &gt; ^y, rq = 1 and s = sup (p, ^f) we have

p &lt;fa(r) and &lt;?&lt;,/(/)
and thus

s = sup (/?,&lt;?)&lt; 4-(/)
therefore

^i7,»-s = 1-

If^y, pî = l &gt; ^i/, qs = 1 aid r = i^ (P&gt; ^) we have

s&lt;fi,(p)ands&lt;f(q)
and thus

.&lt;mf(/,/(p), ;/.(&lt;?))=,,(/-)
therefore

^y, r.? = 1 

Necessity. If a relation /?;y is monotone it can be put in the form (5.4). In fact,
given an element r of A", let us compute the superior f,, (r) of the image of r in
Rij. For (5.3) we have

^(^l.

NETWORKS OF CONSTRAINTS                                      125

Thus, for (5.2), equation (5.4) is satisfied. Function /,y (r) satisfies equation
(5.5). In fact, for (5.2) we have

^'A'-l/l/Onf^i,^)) = 1 mdRii,'2fij(inf(rl,r-i)) = 1

and thus, for the definition of f ij

fi, (inf (r,, r, )) &lt; f {r, ) and ,/ (inf (.,, r, )) &lt; f (r, )

Therefore

f (inf (ri ,/-,))&lt; inf (f (r, ), . (^ )).                (5.9)

On the other hand, we have

^v,'-1 ,(' i) = 1 and^y, ^ y^) = l.
From (5.2)

Rij,ri m{(.f(ri),fij(,r-t)) = l and^,y^ inf ( (n ), , (r;)) = l-

Thus from (5.3)

^7,inf(ri,^)inf(/,y(fi),/y(^))=l.

Therefore

;/ (inf (ri, r,) &gt; inf (,/ (?-i ),;/ (^)).

Finally from the above relation and (5.9), equation (5.5) follows.        Q.E.D.

A few examples will clarify the kind of relations allowed by the monotonicity
constraint. For instance, if the partial ordering is also total, equation (5.5) can
be substituted by equation (5.8), i.e., the defining function must be monotone.
In Fig. 6a we see a monotone relation represented by a bipartite graph. We have
^(5)=4,/,/(4)=/,/.(3)=2.y;y(2)=4.(l)= 1. Conversely. g(l)= l,g(2) =
3, gij (3) = Sij (4) = 5. A special case of monotone relation, with infinite sets,
is represented by the "shortest path" constraint

s ^W =r+d.

In fact, the shortest path problem in a weighted graph is a special case of our
central problem. The network of relations R can be obtained from the weighted
graph as follows. The set of values for each variable is the set of natural numbers
and all relations R,, (i,j = l,..., n) are monotone. IfR,, is specified by the de-
fining function /^we have

^&lt;^(^)=^+^

where t,, are the arcs weights: îy = ?y,, ? = 0. We will see that the minimal net-
work M has the same form

x,&lt;f,M(Xi)=x,+d

126

UGO MONTANARI

X,




X.




Fig. 6. (a) An example of monotone relation, (b) The relation in (a) without "ceiling" in
X, and "floor" in Xj. (c) The rectangular image of element x^y as allowed by the inter-
section of two monotone relations /? and /?.

and thus rf,y represents the length of the shortest path from vertex V, to vertex
Vj. As a check, note that d,, &lt;S t^ and so Af C_ R,..

If the sets Xj are finite, the restriction to total relations could look heavy. On
the contrary, a "floor" value x^ o and a "ceiling" value x,  can always be

added to X,, such that

R,, u, = 1 for all s

and   Rf^ ,0 = 1 for all r.
Fig. 6b shows the relation in Fig. 6a without ceiling in Xi and floor in Xj.

NETWORKS OF CONSTRAINTS                                     127

In general, monotone relations are considerably more powerful than simple
"shortest path" constraints. For instance, the lattice structure of multidimen-
sional euclidean spaces can be used for specifying multidimensional rectangular
domains. In Fig. 6c we see how defining functions , oîRjj and gj, oîRj, re-
strict to a rectangle the image of x^r m /?;, + R,,. Different points x,_,- can
generate different rectangles, provided equation (5.5) is satisfied.

The next theorem proves the closure of the class of monotone relations under
the operations of intersection and composition and gives the rules for perform-
ing such operations in terms of the defining functions.

THEOREM 5.5. (a) IfR/j and /?;'' are monotone relations represented by the
defining functions f,' and f- then the sum

^H = ^-ij + ^t/
is a monotone relation represented by the defining function

fi,(r) =inf (f;,(r),f^.                   (5.10)
(&amp;) Likewise, the product

^ij = ^ik Rkj

is represented by

fi,(r) =fki(f,k(r)).                      (5.11)

Proof, (a) Relation R^ defined by (5.4) and (5.10) is evidently the inter-
section oîR'ij andR^. Furthermore R,j is total. In fact we have at least

Ri^,&gt;fij(r) = 1 ändRi^,Ki,(s)s= 1

where g,j (s) is defined dually. Finally, function f,/ satisfies equation (5.5)
f (inf (ri, r, )) = inf (;.;. (inf (r,, r, )),,; (inf (/-,, r, )))

=inf(inf(/y(ri),^)),inf(/;;(r, ),,;(/,)))
= inf (inf (;.; (/, ), ;;(/-, )), inf (,; (r,), /,;(^ )))
=^(fij(r,)J(r,)).

(b) The "if" part of (5.4) is trivial. For the "only if" part, if R,^  = 1 then an
index t exists, such that Rnc,rt = 1 aî\d Pkj, ts = 1  B^ ^ik, rr = 1 implies
«fik^)- Thus from (5.8) we have

fk,(t) &lt;fk,(fik (r))= fi, (r).

But Rifi, is = 1 implies s &lt;.4y (t) and thus s &lt;, (r). Relation 7?y is also total
because at least

^7, r f {r) = l and R,g^(s)s = 1-

128                                                UGO MONTANARI

Equation (5.5) is proved as follows

fi,Wr,, r,)) =, (f^ (mf(r,, r,)) =4/ (inf(^ (r,\f^ (r,)))

= inf(A/ a-fc (/-i)),A/ (f (^2))) = inf(/;/ O-i ),;/ (r,))

Q.E.D.
Next theorem proves the distributivity of monotone relations.
THEOREM 5.6. (a) Any set of monotone relations

Rik'Rkf ^J = 1&gt;    &gt;"
form a distributive set of relations with respect to set X^, i.e.,

ff: ^,R,k\ ff; Pk, v^ =f f ^,-R,k^/ v      (5.12)
\&gt;'i      /\/sl      / "i/'-i

for all fundamental vectors V^and Vjo.

Proof. For Theorem (5.4) vectors R'ok = VoiRik ^^P'ko =^fc ^/o repre-
sent subsets of Xff of the form

Rok,t=l ifît&lt;T-dndRko,t=i iîît&gt;T.         (5.13)

Furthermore, intersection of two subsets of this form produces a subset of the
same form. If

Rok ^Rok + Pok
we have

R^,t=l^t&lt;mî(t',t")
And if

Rko =Rko +^fco
we have

7?feo,f=liff?&gt;sup(F',F").
We will prove that subsets of this form satisfy both left and right distributivity

Rok (RkO "^feo) = Rokoko + Rokoko-           (5.14)
(Rok '^'Ro^Rko ^RokPko +RokRko            (5.15)
In fact, the right member of (5.14), in binary form, is

{ Nk            \  l Nk            \
V ^ofc,fA/?fco,JA V Rok.t^Rko.t].
VI             /  \t=l             I

NETWORKS OF CONSTRAINTS                                      129

Applying binary distributivity, we have

Nk Wfc

V   V (/?ot,r,A^ofc,r,)A(^o,^A^'o,^)
t,=i t^i

oi equivalently

Nk                                                   N    A^

V^,,A(^o,rA^'o,,)V V V

t=i                               fi=i r;=i

(^ofc,,, A/?ofe,r,)A(/?feo,r, Aßfc'o,^) (5.16)
From (5.13), if

Rok, f i = l&gt;^ofc,t, = l&gt;^A:o,r, = l and /?fco, ^ = l

then a value

?=sup(ri,r:,)

can be found, such that

Rok,t=l,R'ko.t=l and/îfc'o,(= 1.
Therefore equation (5.16) becomes

Nk
v Rok,t A(^îfco, t ATÎ^'O^),

i.e., the left member of (5.14). Formula (5.15) can be proved dually. From
closure under sum, left and right distributivity we have

IP   \1 i   . \  P &lt;?

Z^fc  £ ^o =Z Z^^o          Q.E.D.
\i=i    /\/=i    /   1=1 /=i

i.e..formula (5.12).

The next corollary will be useful in establishing star-distributivity.

Corollary. If Rik, R'iki ^ik' ^kj' ^'kj indR'^j are monotone relations we
have

^ik (Rk/ + ^fc/) = ^ik^kf + ^(fc ^fc/                (5.17)
(Rik + Rik)Rkj = f^ik Pkj + ^ik ^kf                (5.18)

Proof. Equation (5.17) can be written as

v^R.k (.R'ki V,Q +R'k, Vjo) = ^.RikR'k, ^o + Vo.RikR'k, v,o

for all fundamental vectors Vy, and Fyo. Therefore, it descends from (5.12).
The same is true for (5.18).                                         Q.E.D.

130                                             UGO MONTANARI

We can now prove our final result.

THEOREM 5.7. Let R be a network of relations such that
(i) its relations R}, (l, j = 1,..., n ; i ^j) are monotone and
(ü) the loop relations Y^ (i = l,..., n) of the network Y " obtained after
one iteration of algorithm C are equal to unity.

We can prove that:

(a) Network R is star-distributive.

(b) Network Y " is equal to the closure Y of R. All relations V,, (i, j = Ï,
... ,n;i i^j) are monotone.

(c) Network Y is distributive.

(d) Network R is decomposable and the symmetrization Y ' of its closure Y
is minimal.

Proof, (a) From condition (ii) and Y" C_ R we have R = /. Expressions
obtained by combining relations R^ (i,j = 1,..., n; i ^j) with the operations
of intersection and composition evaluate to monotone relations for theorem
(5.5). The unity elements /? can be involved in an expression either under com-
position or under intersection. In the former case a monotone relation is triv-
ially obtained. In the latter case the unity / must be intersected with an expres-
sion representing the global constraint given by a set of circuits from V, to Vf in
R. In fact we can assume inductively that no unity is involved in this expression,
and in this case distributivity holds for the corollary to Theorem (5.6), and the
expression can always be reduced to a sum of products. The result of the inter-
section operation must be again unity, because Y^ ^ = l for all r, and thus for
Theorem (4.4) all pairs (x^,., x^,.) must be allowed by all circuits from V, to
V, in R. In conclusion, the set D of all expressions contains expressions that
either evaluate to monotone relations or to identities.
Left distributivity

Eik (Ei, + E^ = E E, + £, E^              (5.19)

always hold. In fact, if all relations are monotone, this property is proved by
the corollary to Theorem (5.6). If E,^ is a unity, both members evaluate to
Ê't+£'fc lïEkioTE^iis a unity, say E^, we have k =  and (5.19) becomes

Eik (fkk + Êftfc) = ^ife f k k + Eik Ekk 

But then E^ = I^k for Y^ = Ikk &gt; ^d therefore both members evaluate to
£',fe. The same proof holds for right distributivity.

(b) This part follows from (a) and Theorem (5.3).

(c) This part follows from (b) and Theorem (5.6).

(d) This part follows from (c) and Theorem (5.2).                 Q.E.D.

NETWORKS OF CONSTRAINTS                                      131

CONCLUSION

In this paper we have presented a formal treatment of networks of binary
constraints. The main practical result was the discovery of an algorithm for
adding to the direct constraint between each pair of variables the indirect con-
straints transmitted by all the paths in the network. In particular cases the re-
sulting constraint was proved equivalent to the global constraint represented
by the entire network as seen by that pair of vertices. This result allows the
partial or total utilization of the global constraint structure for reducing the
set of feasible values of a variable to be determined, when the values of other
variables are known.

For the practical computer implementation of this method, the following
requirements can be suggested:

(a) In the application under examination, most constraints must be reasonably
represented or approximated by binary constraints or simple networks of binary
constraints. Note that if we allow a constraint among m variables to be repre-
sented by a network of n vertices, with n &gt; m, then the negative result of Sec-
tion 3 no longer holds, and many representations of the constraint, trivial and
not, can be found. For instance, the ternary relation (3.4) which is not repre-
sentable with a 3-vertex network, can be represented by the 4-vertex network
in Fig. 2, as seen from vertices V\, V^, and V-,,.

(b) The resulting binary relations (finite or infinite) must be capable of being
stored in an economical way in a computer memory. For instance, if the vari-
ables are points of w-dimensional spaces, a relation Rjj could be stored repre-
senting the images in Xj of all elements7 x^ y of A"; as w-dimensional domains.
Known techniques of domain encoding can then be used. For instance, two
given points are sufficient for determining a rectangular domain: this is often
the meaning of functions , (r) and g^ (r) representing a monotone relation.

(c) The operations of intersection and composition must be easily definable
in the chosen class of relations. In particular, this class must be closed under
those two operations. For instance, this is the case of relations represented by
domains, convex domains, domains enclosed by polygons or convex polygons,
rectangular domains.

(d) The closed network is then obtained with algorithme. The closed network
should then be close to the minimal. For instance, we have coincidence for
rectangular domains, and we expect reasonable closeness for convex domains.
Bad results can be expected if the relations allow most pairs and forbide a few
isolated pairs, like in graph-coloring problems. Anyway, if the addition of a
further constraint destroys regularity (i.e., closed ^ minimal), it is, nevertheless,

7 Or just one, if all the other images can be obtained from it by a fixed procedure (e.g.,
translation).

132                                             UGO MONTANARI

convenient to add it. Maybe its addition will not be entirely exploited, but the
monotonicity property of intersection and composition certifies that the mod-
ified closed network will be more restrictive.

REFERENCES

1. C. M. Eastman, Representations foi space planning, CACM 13, 4, 242-250 (April
1970).

2. A. Guzman, Computer recognition of three-dimensional objects in a visual scene,
MAC-TR-59 Project MAC Massachusetts Institute of Technology, December 1968,
PhD thesis.

3. M. D. Kelly, Edge detection in pictures by computer using planning, AIM-108 Stanford
Artificial Intelligence Project, Stanford University, January 1970.

4. U. G. Montanari, On the optimal detection of curves in noisy pictures, CACM 14,
335-345 (1971).

5. R. Narasimhan, On the description, generation, and recognition of classes of pictures,
in Automatic Interpretation and Classification of Images A. Grasselli, Ed., Academic
Press, New York (1969).

6. M. B. Clowes, Transformational grammars and the organization of pictures, in Auto-
matic Interpretation and Classification of Images A. Grasselli, Ed., Academie Press
(1969).

7. J. Feder, Linguistic specification and analysis of classes of line patterns, 403-2 Dept
of Electrical Engineering, New York University, April 1969, PhD thesis.

8. A. C. Shaw, The formal description and parsing of pictures, SLAC 84 Stanford Linear
Accelerator Center, Stanford University, March 1968, PhD thesis.

9. R. H. Anderson, Syntax-directed recognition of hand-printed two-dimensional mathe-
matics, applied mathematics. Harvard University, 1968, PhD thesis.

10. U. G. Montanari, Separable graphs, planar graphs and web grammars, Information and
Control 16, 3, 243-267 (May 1970).

11. S.Warshall,A theorem on boolean matrices, JACM 9, 11-12 (1962).

12. R. W. Floyd, Algorithm 97 shortest path, CACM S, 6, 345 (June 1962).

13. A. Ginzburg, Algebraic Theory of Automata, Academic Press (1968).

14. J. C. Schwabel, and B. McCormick, Consistent properties of composite formation
under a binary relation. Inform. Sei. 2,179-209 (1970).

Received September 22, 1972</dp:raw-text><dp:aggregation-type>Journals</dp:aggregation-type><dp:version-number>S350.1</dp:version-number></dp:document-properties><cja:converted-article version="4.5.2" docsubtype="fla" xml:lang="en" xmlns:cja="http://www.elsevier.com/xml/cja/schema">
		<cja:item-info>
			<cja:jid>INS</cja:jid>
			<cja:aid>74900085</cja:aid>
			<ce:pii xmlns:ce="http://www.elsevier.com/xml/common/schema">0020-0255(74)90008-5</ce:pii>
			<ce:doi xmlns:ce="http://www.elsevier.com/xml/common/schema">10.1016/0020-0255(74)90008-5</ce:doi>
			<ce:copyright type="unknown" year="1974" xmlns:ce="http://www.elsevier.com/xml/common/schema"/>
		</cja:item-info>
		<cja:head>
			<ce:article-footnote xmlns:ce="http://www.elsevier.com/xml/common/schema">
				<ce:label>☆</ce:label>
				<ce:note-para>This work was carried out while the author was visiting at the Department of Computer Science, Carnegie Mellon University, Pittsburgh, Pa. and was supported in part by the Advanced Research Projects Agency of the Office of the Secretary of Defense (F44620-70-C-0107).</ce:note-para>
			</ce:article-footnote>
			<ce:title xmlns:ce="http://www.elsevier.com/xml/common/schema">Networks of constraints: Fundamental properties and applications to picture processing</ce:title>
			<ce:author-group xmlns:ce="http://www.elsevier.com/xml/common/schema">
				<ce:author>
					<ce:given-name>Ugo</ce:given-name>
					<ce:surname>Montanari</ce:surname>
				</ce:author>
				<ce:affiliation>
					<ce:textfn>Istituto di Elaborazione della Informazione del C.N.R., Pisa, Italy</ce:textfn>
				</ce:affiliation>
			</ce:author-group>
			<ce:date-received day="22" month="9" year="1972" xmlns:ce="http://www.elsevier.com/xml/common/schema"/>
			<ce:abstract class="author" xmlns:ce="http://www.elsevier.com/xml/common/schema">
				<ce:section-title>Abstract</ce:section-title>
				<ce:abstract-sec>
					<ce:simple-para view="all">The problem of representation and handling of constraints is here considered, mainly for picture processing purposes. A systematic specification and utilization of the available constraints could significantly reduce the amount of search in picture recognition. On the other hand, formally stated constraints can be embedded in the syntactic productions of picture languages. Only binary constraints are treated here, but they are represented in full generality as binary relations. Constraints among more than two variables are then represented as networks of simultaneous binary relations. In general, more than one equivalent (i.e., representing the same constraint) network can be found: a minimal equivalent network is shown to exist, and its computation is shown to solve most practical problems about constraint handling. No exact solution for this central problem was found. Anyway, constraints are treated algebraically, and the solution of a system of linear equations in this algebra provides an approximation of the minimal network. This solution is then proved exact in special cases, e.g., for tree-like and series-parallel networks and for classes of relations for which a distributive property holds. This latter condition is satisfied in cases of practical interest.</ce:simple-para>
				</ce:abstract-sec>
			</ce:abstract>
		</cja:head>
		<cja:tail>
			<ce:bibliography view="all" xmlns:ce="http://www.elsevier.com/xml/common/schema">
				<ce:section-title>References</ce:section-title>
				<ce:bibliography-sec>
					<ce:bib-reference id="BIB1">
						<ce:label>1.</ce:label>
						<sb:reference xmlns:sb="http://www.elsevier.com/xml/common/struct-bib/schema">
							<sb:contribution langtype="en">
								<sb:authors>
									<sb:author>
										<ce:given-name>C.M.</ce:given-name>
										<ce:surname>Eastman</ce:surname>
									</sb:author>
								</sb:authors>
								<sb:title>
									<sb:maintitle>Representations for space planning</sb:maintitle>
								</sb:title>
							</sb:contribution>
							<sb:host>
								<sb:issue>
									<sb:series>
										<sb:title>
											<sb:maintitle>CACM 13</sb:maintitle>
										</sb:title>
										<sb:volume-nr>4</sb:volume-nr>
									</sb:series>
									<sb:date>April 1970</sb:date>
								</sb:issue>
								<sb:pages>
									<sb:first-page>242</sb:first-page>
									<sb:last-page>250</sb:last-page>
								</sb:pages>
							</sb:host>
						</sb:reference>
					</ce:bib-reference>
					<ce:bib-reference id="BIB2">
						<ce:label>2.</ce:label>
						<sb:reference xmlns:sb="http://www.elsevier.com/xml/common/struct-bib/schema">
							<sb:contribution langtype="en">
								<sb:authors>
									<sb:author>
										<ce:given-name>A.</ce:given-name>
										<ce:surname>Guzman</ce:surname>
									</sb:author>
								</sb:authors>
								<sb:title>
									<sb:maintitle>Computer recognition of three-dimensional objects in a visual scene</sb:maintitle>
								</sb:title>
							</sb:contribution>
							<sb:host>
								<sb:edited-book>
									<sb:title>
										<sb:maintitle>MAC-TR-59</sb:maintitle>
									</sb:title>
									<sb:book-series>
										<sb:series>
											<sb:title>
												<sb:maintitle>PhD thesis</sb:maintitle>
											</sb:title>
										</sb:series>
									</sb:book-series>
									<sb:date>December 1968</sb:date>
									<sb:publisher>
										<sb:name>Project MAC Massachusetts Institute of Technology</sb:name>
									</sb:publisher>
								</sb:edited-book>
							</sb:host>
						</sb:reference>
					</ce:bib-reference>
					<ce:bib-reference id="BIB3">
						<ce:label>3.</ce:label>
						<sb:reference xmlns:sb="http://www.elsevier.com/xml/common/struct-bib/schema">
							<sb:contribution langtype="en">
								<sb:authors>
									<sb:author>
										<ce:given-name>M.D.</ce:given-name>
										<ce:surname>Kelly</ce:surname>
									</sb:author>
								</sb:authors>
								<sb:title>
									<sb:maintitle>Edge detection in pictures by computer using planning</sb:maintitle>
								</sb:title>
							</sb:contribution>
							<sb:host>
								<sb:edited-book>
									<sb:book-series>
										<sb:series>
											<sb:title>
												<sb:maintitle>
													<ce:italic>AIM-108</ce:italic> Stanford Artificial Intelligence Project
												</sb:maintitle>
											</sb:title>
										</sb:series>
									</sb:book-series>
									<sb:date>January 1970</sb:date>
									<sb:publisher>
										<sb:name>Stanford University</sb:name>
									</sb:publisher>
								</sb:edited-book>
							</sb:host>
						</sb:reference>
					</ce:bib-reference>
					<ce:bib-reference id="BIB4">
						<ce:label>4.</ce:label>
						<sb:reference xmlns:sb="http://www.elsevier.com/xml/common/struct-bib/schema">
							<sb:contribution langtype="en">
								<sb:authors>
									<sb:author>
										<ce:given-name>U.G.</ce:given-name>
										<ce:surname>Montanari</ce:surname>
									</sb:author>
								</sb:authors>
								<sb:title>
									<sb:maintitle>On the optimal detection of curves in noisy pictures</sb:maintitle>
								</sb:title>
							</sb:contribution>
							<sb:host>
								<sb:issue>
									<sb:series>
										<sb:title>
											<sb:maintitle>CACM 14</sb:maintitle>
										</sb:title>
									</sb:series>
									<sb:date>1971</sb:date>
								</sb:issue>
								<sb:pages>
									<sb:first-page>335</sb:first-page>
									<sb:last-page>345</sb:last-page>
								</sb:pages>
							</sb:host>
						</sb:reference>
					</ce:bib-reference>
					<ce:bib-reference id="BIB5">
						<ce:label>5.</ce:label>
						<sb:reference xmlns:sb="http://www.elsevier.com/xml/common/struct-bib/schema">
							<sb:contribution langtype="en">
								<sb:authors>
									<sb:author>
										<ce:given-name>R.</ce:given-name>
										<ce:surname>Narasimhan</ce:surname>
									</sb:author>
								</sb:authors>
								<sb:title>
									<sb:maintitle>On the description, generation, and recognition of classes of pictures</sb:maintitle>
								</sb:title>
							</sb:contribution>
							<sb:host>
								<sb:edited-book>
									<sb:editors>
										<sb:editor>
											<ce:given-name>A.</ce:given-name>
											<ce:surname>Grasselli</ce:surname>
										</sb:editor>
									</sb:editors>
									<sb:title>
										<sb:maintitle>Automatic Interpretation and Classification of Images</sb:maintitle>
									</sb:title>
									<sb:date>1969</sb:date>
									<sb:publisher>
										<sb:name>Academic Press</sb:name>
										<sb:location>New York</sb:location>
									</sb:publisher>
								</sb:edited-book>
							</sb:host>
						</sb:reference>
					</ce:bib-reference>
					<ce:bib-reference id="BIB6">
						<ce:label>6.</ce:label>
						<sb:reference xmlns:sb="http://www.elsevier.com/xml/common/struct-bib/schema">
							<sb:contribution langtype="en">
								<sb:authors>
									<sb:author>
										<ce:given-name>M.B.</ce:given-name>
										<ce:surname>Clowes</ce:surname>
									</sb:author>
								</sb:authors>
								<sb:title>
									<sb:maintitle>Transformational grammars and the organization of pictures</sb:maintitle>
								</sb:title>
							</sb:contribution>
							<sb:host>
								<sb:edited-book>
									<sb:editors>
										<sb:editor>
											<ce:given-name>A.</ce:given-name>
											<ce:surname>Grasselli</ce:surname>
										</sb:editor>
									</sb:editors>
									<sb:title>
										<sb:maintitle>Automatic Interpretation and Classification of Images</sb:maintitle>
									</sb:title>
									<sb:date>1969</sb:date>
									<sb:publisher>
										<sb:name>Academic Press</sb:name>
									</sb:publisher>
								</sb:edited-book>
							</sb:host>
						</sb:reference>
					</ce:bib-reference>
					<ce:bib-reference id="BIB7">
						<ce:label>7.</ce:label>
						<sb:reference xmlns:sb="http://www.elsevier.com/xml/common/struct-bib/schema">
							<sb:contribution langtype="en">
								<sb:authors>
									<sb:author>
										<ce:given-name>J.</ce:given-name>
										<ce:surname>Feder</ce:surname>
									</sb:author>
								</sb:authors>
								<sb:title>
									<sb:maintitle>Linguistic specification and analysis of classes of line patterns</sb:maintitle>
								</sb:title>
							</sb:contribution>
							<sb:comment>403-2</sb:comment>
							<sb:host>
								<sb:edited-book>
									<sb:book-series>
										<sb:series>
											<sb:title>
												<sb:maintitle>PhD thesis</sb:maintitle>
											</sb:title>
										</sb:series>
									</sb:book-series>
									<sb:date>April 1969</sb:date>
									<sb:publisher>
										<sb:name>Dept of Electrical Engineering, New York University</sb:name>
									</sb:publisher>
								</sb:edited-book>
							</sb:host>
						</sb:reference>
					</ce:bib-reference>
					<ce:bib-reference id="BIB8">
						<ce:label>8.</ce:label>
						<sb:reference xmlns:sb="http://www.elsevier.com/xml/common/struct-bib/schema">
							<sb:contribution langtype="en">
								<sb:authors>
									<sb:author>
										<ce:given-name>A.C.</ce:given-name>
										<ce:surname>Shaw</ce:surname>
									</sb:author>
								</sb:authors>
								<sb:title>
									<sb:maintitle>The formal description and parsing of pictures</sb:maintitle>
								</sb:title>
							</sb:contribution>
							<sb:host>
								<sb:edited-book>
									<sb:title>
										<sb:maintitle>SLAC 84</sb:maintitle>
									</sb:title>
									<sb:book-series>
										<sb:series>
											<sb:title>
												<sb:maintitle>PhD thesis</sb:maintitle>
											</sb:title>
										</sb:series>
									</sb:book-series>
									<sb:date>March 1968</sb:date>
									<sb:publisher>
										<sb:name>Stanford Linear Accelerator Center, Stanford University</sb:name>
									</sb:publisher>
								</sb:edited-book>
							</sb:host>
						</sb:reference>
					</ce:bib-reference>
					<ce:bib-reference id="BIB9">
						<ce:label>9.</ce:label>
						<sb:reference xmlns:sb="http://www.elsevier.com/xml/common/struct-bib/schema">
							<sb:contribution langtype="en">
								<sb:authors>
									<sb:author>
										<ce:given-name>R.H.</ce:given-name>
										<ce:surname>Anderson</ce:surname>
									</sb:author>
								</sb:authors>
								<sb:title>
									<sb:maintitle>Syntax-directed recognition of hand-printed two-dimensional mathematics, applied mathematics</sb:maintitle>
								</sb:title>
							</sb:contribution>
							<sb:host>
								<sb:edited-book>
									<sb:book-series>
										<sb:series>
											<sb:title>
												<sb:maintitle>PhD thesis.</sb:maintitle>
											</sb:title>
										</sb:series>
									</sb:book-series>
									<sb:date>1968</sb:date>
									<sb:publisher>
										<sb:name>Harvard University</sb:name>
									</sb:publisher>
								</sb:edited-book>
							</sb:host>
						</sb:reference>
					</ce:bib-reference>
					<ce:bib-reference id="BIB10">
						<ce:label>10.</ce:label>
						<sb:reference xmlns:sb="http://www.elsevier.com/xml/common/struct-bib/schema">
							<sb:contribution langtype="en">
								<sb:authors>
									<sb:author>
										<ce:given-name>U.G.</ce:given-name>
										<ce:surname>Montanari</ce:surname>
									</sb:author>
								</sb:authors>
								<sb:title>
									<sb:maintitle>Separable graphs, planar graphs and web grammars</sb:maintitle>
								</sb:title>
							</sb:contribution>
							<sb:host>
								<sb:issue>
									<sb:series>
										<sb:title>
											<sb:maintitle>Information and Control</sb:maintitle>
										</sb:title>
										<sb:volume-nr>16</sb:volume-nr>
									</sb:series>
									<sb:issue-nr>3</sb:issue-nr>
									<sb:date>May 1970</sb:date>
								</sb:issue>
								<sb:pages>
									<sb:first-page>243</sb:first-page>
									<sb:last-page>267</sb:last-page>
								</sb:pages>
							</sb:host>
						</sb:reference>
					</ce:bib-reference>
					<ce:bib-reference id="BIB11">
						<ce:label>11.</ce:label>
						<sb:reference xmlns:sb="http://www.elsevier.com/xml/common/struct-bib/schema">
							<sb:contribution langtype="en">
								<sb:authors>
									<sb:author>
										<ce:given-name>S.</ce:given-name>
										<ce:surname>Warshall</ce:surname>
									</sb:author>
								</sb:authors>
								<sb:title>
									<sb:maintitle>A theorem on boolean matrices</sb:maintitle>
								</sb:title>
							</sb:contribution>
							<sb:host>
								<sb:issue>
									<sb:series>
										<sb:title>
											<sb:maintitle>JACM</sb:maintitle>
										</sb:title>
										<sb:volume-nr>9</sb:volume-nr>
									</sb:series>
									<sb:date>1962</sb:date>
								</sb:issue>
								<sb:pages>
									<sb:first-page>11</sb:first-page>
									<sb:last-page>12</sb:last-page>
								</sb:pages>
							</sb:host>
						</sb:reference>
					</ce:bib-reference>
					<ce:bib-reference id="BIB12">
						<ce:label>12.</ce:label>
						<sb:reference xmlns:sb="http://www.elsevier.com/xml/common/struct-bib/schema">
							<sb:contribution langtype="en">
								<sb:authors>
									<sb:author>
										<ce:given-name>R.W.</ce:given-name>
										<ce:surname>Floyd</ce:surname>
									</sb:author>
								</sb:authors>
								<sb:title>
									<sb:maintitle>Algorithm 97 shortest path</sb:maintitle>
								</sb:title>
							</sb:contribution>
							<sb:host>
								<sb:issue>
									<sb:series>
										<sb:title>
											<sb:maintitle>CACM</sb:maintitle>
										</sb:title>
										<sb:volume-nr>5</sb:volume-nr>
									</sb:series>
									<sb:issue-nr>6</sb:issue-nr>
									<sb:date>June 1962</sb:date>
								</sb:issue>
								<sb:pages>
									<sb:first-page>345</sb:first-page>
								</sb:pages>
							</sb:host>
						</sb:reference>
					</ce:bib-reference>
					<ce:bib-reference id="BIB13">
						<ce:label>13.</ce:label>
						<sb:reference xmlns:sb="http://www.elsevier.com/xml/common/struct-bib/schema">
							<sb:contribution langtype="en">
								<sb:authors>
									<sb:author>
										<ce:given-name>A.</ce:given-name>
										<ce:surname>Ginzburg</ce:surname>
									</sb:author>
								</sb:authors>
								<sb:title>
									<sb:maintitle>Algebraic Theory of Automata</sb:maintitle>
								</sb:title>
							</sb:contribution>
							<sb:host>
								<sb:book>
									<sb:date>1968</sb:date>
									<sb:publisher>
										<sb:name>Academic Press</sb:name>
									</sb:publisher>
								</sb:book>
							</sb:host>
						</sb:reference>
					</ce:bib-reference>
					<ce:bib-reference id="BIB14">
						<ce:label>14.</ce:label>
						<sb:reference xmlns:sb="http://www.elsevier.com/xml/common/struct-bib/schema">
							<sb:contribution langtype="en">
								<sb:authors>
									<sb:author>
										<ce:given-name>J.C.</ce:given-name>
										<ce:surname>Schwabel</ce:surname>
									</sb:author>
									<sb:author>
										<ce:given-name>B.</ce:given-name>
										<ce:surname>McCormick</ce:surname>
									</sb:author>
								</sb:authors>
								<sb:title>
									<sb:maintitle>Consistent properties of composite formation under a binary relation</sb:maintitle>
								</sb:title>
							</sb:contribution>
							<sb:host>
								<sb:issue>
									<sb:series>
										<sb:title>
											<sb:maintitle>Inform. Sci.</sb:maintitle>
										</sb:title>
										<sb:volume-nr>2</sb:volume-nr>
									</sb:series>
									<sb:date>1970</sb:date>
								</sb:issue>
								<sb:pages>
									<sb:first-page>179</sb:first-page>
									<sb:last-page>209</sb:last-page>
								</sb:pages>
							</sb:host>
						</sb:reference>
					</ce:bib-reference>
				</ce:bibliography-sec>
			</ce:bibliography>
		</cja:tail>
	</cja:converted-article></doc:document>
